<?php
/**
 * Created by PhpStorm.
 * User: ivant
 * Date: 14/03/2019
 * Time: 22:03
 */

namespace AppBundle\Service\Aws;

use Aws\Sdk;

/**
 * http://www.inanzzz.com/index.php/post/8eqs/uploading-files-to-aws-s3-buckets-within-symfony-application-using-php-aws-sdk
 *
 * Class AWSS3Util
 * @package AppBundle\Service\Aws
 */

class AWSS3Util implements UploadInterface
{

    /** @var Sdk $sdk */
    protected $sdk;

    /** @var string $bucket */
    private $bucket;

    /**
     * AwsS3Util constructor.
     * @param Sdk $sdk
     * @param $bucket
     */
    public function __construct(Sdk $sdk, string $bucket)
    {
        $this->sdk = $sdk;
        $this->bucket = $bucket;
    }

    /**
     * @param string $localPath
     * @param string $fileName
     * @param string $contentType
     * @return string
     */
    public function upload(string $localPath, string $fileName, string $contentType): string
    {
        $client = $this->sdk->createS3();
        $result = $client->putObject([
            'Bucket' => $this->bucket,
            'Key' => $fileName,
            'SourceFile' => $localPath,
            'ContentType' => $contentType,
            'ACL' => 'public-read'
        ]);
        $client->waitUntil('ObjectExists', ['Bucket' => $this->bucket, 'Key' => $fileName]);

        return $result['ObjectURL'];
    }

    /**
     * @return string
     */
    public function generateUniqueFileName(): string
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }


    /**
     * @param string $fileName
     */
    public function delete(string $fileName): void
    {
        $client = $this->sdk->createS3();
        $client->deleteObject([
            'Bucket' => $this->bucket,
            'Key' => $fileName,
        ]);
    }
}