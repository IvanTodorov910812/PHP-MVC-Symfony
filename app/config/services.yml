# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value
    # AWS SDK
    aws_sdk:
        version: 'latest'
        region: '%aws_default_region%'
        credentials:
            key: '%aws_key%'
            secret: '%aws_secret%'

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    twig.extension.sortbyfield:
            class: Snilius\Twig\SortByFieldExtension
            tags:
                - { name: twig.extension }

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests, DataFixtures}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # AppBundle\DataFixtures\:
    #    resource: '../../src/AppBundle/DataFixtures'
    #    public: true
    #    tags: ['doctrine.fixture.orm']
        
    AppBundle\Service\:
         resource: '../../src/AppBundle/Service'
         public: true
         
    AppBundle\Service\Contact\ContactService:
             arguments:
                     - "@security.token_storage"
                     - "@=service('doctrine.orm.entity_manager').getRepository('AppBundle:Contact')"
                     - '@AppBundle\Service\Aws\UploadInterface'

    AppBundle\Service\Message\MessageService:
             arguments:
                     - "@security.token_storage"
                     - "@=service('doctrine.orm.entity_manager').getRepository('AppBundle:Message')"

    AppBundle\Service\Sale\SaleService:
         arguments:
                 - "@security.token_storage"
                 - "@=service('doctrine.orm.entity_manager').getRepository('AppBundle:Sale')"

    AppBundle\Service\Document\DocumentService:
         arguments:
                - "@=service('doctrine.orm.entity_manager').getRepository('AppBundle:Document')"
                - '@AppBundle\Service\Aws\UploadInterface'


    AppBundle\Service\Supplier\SupplierService:
         arguments:
             - "@security.token_storage"
             - "@=service('doctrine.orm.entity_manager').getRepository('AppBundle:Supplier')"

    AppBundle\Service\Delivery\DeliveryService:
         arguments:
             - "@security.token_storage"
             - "@=service('doctrine.orm.entity_manager').getRepository('AppBundle:Delivery')"

    Aws\Sdk:
        arguments:
            - '%aws_sdk%'

    AppBundle\Service\Aws\AWSS3Util:
        arguments:
            - '@Aws\Sdk'
            - '%aws_bucket_name%'

    AppBundle\Service\Aws\UploadInterface: '@AppBundle\Service\Aws\AwsS3Util'

    AppBundle\Service\Role\RoleService:
        arguments:
            - "@=service('doctrine.orm.entity_manager').getRepository('AppBundle:Role')"

    AppBundle\Service\Profile\ProfileService:
        arguments:
            - "@security.password_encoder"
            - "@security.token_storage"
            - "@=service('doctrine.orm.entity_manager').getRepository('AppBundle:User')"




